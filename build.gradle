buildscript {
  repositories {
    mavenLocal()
    jcenter()
  }
  
  dependencies {
    classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:$gradleBintrayVersion"
    classpath "org.jfrog.buildinfo:build-info-extractor-gradle:$infoExtractorVersion"
  }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

sourceCompatibility = '1.8'

group = project.group
version = project.version

repositories {
  mavenLocal()
  maven { url "http://nexus.devbliss.com/content/groups/public" }
  maven { url 'https://repo.gradle.org/gradle/libs' }
  mavenCentral()
}

dependencies {
  compile gradleApi()
  compile localGroovy()
  
  compile "com.devbliss.doctest:doctest:$doctestVersion"
  
  testCompile "junit:junit:$junitVersion"
  testCompile "org.mockito:mockito-all:$mockitoVersion"
}

ext {
  project_website = "https://github.com/{$orgId}/${projectId}"
  project_scm = "scm:git@github.com:${orgId}/${projectId}.git"
  license_url = "https://raw.github.com/${orgId}/${projectId}/master/license.txt"
}

if( !hasProperty( 'bintrayUser' ) )
ext.bintrayUser = ''

if( !hasProperty( 'bintrayKey' ) )
ext.bintrayKey = ''

def pomConfig = {
  licenses {
    license {
      name "The Apache Software License, Version 2.0"
      url "http://www.apache.org/licenses/LICENSE-2.0.txt"
      distribution "repo"
    }
  }
  developers {
    developer {
      id "hillkorn"
      name "Dennis Schumann"
      email "hillkorn@gmail.com"
    }
  }
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
  classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from 'build/docs/javadoc'
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      artifact sourcesJar
      artifact javadocJar
    
      pom.withXml {
        def root = asNode()
        root.appendNode('description', 'A Gradle Plugin for doctest.')
        root.children().last() + pomConfig
      }
    }
  }
}

bintray {
  user = bintrayUser
  key = bintrayKey

  publications = ['mavenJava']

  dryRun = false //Whether to run this as dry-run, without deploying
  publish = false //If version should be auto published after an upload
  pkg {
    repo = 'gradle-plugins'
    userOrg = orgId
    name = 'doctest-gradle-plugin'
    desc = 'Gradle Doctest plugin. Integrates doctest into an project with an additional source set and task.'
    websiteUrl = project.project_website
    issueTrackerUrl = "https://github.com/${orgId}/${projectId}/issues"
    vcsUrl = project.project_scm
    licenses = ['Apache-2.0']
    labels = ['doctest', 'gradle', 'plugin']
    publicDownloadNumbers = true
    //Optional version descriptor
    version {
      name = project.version
      userOrg = orgId
      vcsTag = project.version
      attributes = ['gradle-plugin': 'com.devbliss:com.devbliss.doctest:doctest-gradle-plugin'] //Optional version-level attributes
//      gpg {
//        sign = true //Determines whether to GPG sign the files. The default is false
//      }
    }
  }
}

task install(dependsOn: 'publishMavenJavaPublicationToMavenLocal') << {
  logger.info "Installing $project.name"
}