buildscript {
  repositories {
    mavenLocal()
    jcenter()
  }
  
  dependencies {
    classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:$gradleBintrayVersion"
    classpath "org.jfrog.buildinfo:build-info-extractor-gradle:$infoExtractorVersion"
  }
}

apply plugin: 'java-gradle-plugin'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

sourceCompatibility = '1.8'

group = project.group
version = project.version

repositories {
  mavenLocal()
  maven { url "http://nexus.devbliss.com/content/groups/public" }
  maven { url 'https://repo.gradle.org/gradle/libs' }
  mavenCentral()
}

dependencies {
  compile gradleApi()
  compile localGroovy()
  
  compile "com.devbliss.doctest:doctest:$doctestVersion"
  
  testCompile "junit:junit:$junitVersion"
  testCompile "org.mockito:mockito-all:$mockitoVersion"
}

ext {
  project_website = "https://github.com/{$developerId}/${projectId}"
  project_scm = "scm:git@github.com:${developerId}/${projectId}.git"
  license_url = "https://raw.github.com/${developerId}/${projectId}/master/license.txt"
}

if( !hasProperty( 'bintrayUser' ) )
  ext.bintrayUser = ''

if( !hasProperty( 'bintrayKey' ) )
  ext.bintrayKey = ''

bintray {
    user = 'bintray_user'
    key = 'bintray_api_key'

    configurations = ['deployables'] //When uploading configuration files
    // - OR -
    publications = ['mavenStuff'] //When uploading Maven-based publication files
    // - AND/OR -
    filesSpec { //When uploading any arbitrary files ('filesSpec' is a standard Gradle CopySpec)
        from 'arbitrary-files'
        into 'standalone_files/level1'
        rename '(.+)\\.(.+)', '$1-suffix.$2'
    }
    dryRun = false //Whether to run this as dry-run, without deploying
    publish = true //If version should be auto published after an upload
    pkg {
        repo = 'maven'
        userOrg = 'devbliss'
        name = 'doctest-gradle-plugin'
        desc = 'Gradle Doctest plugin. Integrates doctest into an project with an additional source set and task.'
        websiteUrl = project.project_website
        issueTrackerUrl = "https://github.com/{$developerId}/${projectId}/issues"
        vcsUrl = project.project_scm
        licenses = ['Apache-2.0']
        labels = ['doctest', 'gradle plugin']
        publicDownloadNumbers = true
        //Optional version descriptor
        version {
            name = project.version
            released  = new Date()
            vcsTag = project.version
            attributes = ['gradle-plugin': 'com.devbliss:com.devbliss.doctest:doctest-gradle-plugin'] //Optional version-level attributes
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
            }
        }
    }
}